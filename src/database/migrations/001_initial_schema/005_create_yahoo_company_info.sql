-- Create yahoo_company_info table
CREATE TABLE IF NOT EXISTS yahoo_company_info (
    symbol VARCHAR(10) PRIMARY KEY,
    address1 TEXT,
    address2 TEXT,
    city VARCHAR(100),
    state VARCHAR(50),
    zip VARCHAR(20),
    country VARCHAR(100),
    phone VARCHAR(50),
    fax VARCHAR(50),
    website TEXT,
    industry VARCHAR(100),
    "industryKey" VARCHAR(100),
    "industryDisp" VARCHAR(100),
    "industrySymbol" VARCHAR(50),
    sector VARCHAR(100),
    "sectorKey" VARCHAR(100),
    "sectorDisp" VARCHAR(100),
    "longBusinessSummary" TEXT,
    "fullTimeEmployees" INTEGER,
    "auditRisk" INTEGER,
    "boardRisk" INTEGER,
    "compensationRisk" INTEGER,
    "shareHolderRightsRisk" INTEGER,
    "overallRisk" INTEGER,
    "governanceEpochDate" BIGINT,
    "compensationAsOfEpochDate" BIGINT,
    "irWebsite" TEXT,
    "executiveTeam" TEXT,
    "maxAge" INTEGER,
    "priceHint" INTEGER,
    "previousClose" FLOAT,
    open FLOAT,
    "dayLow" FLOAT,
    "dayHigh" FLOAT,
    "regularMarketPreviousClose" FLOAT,
    "regularMarketOpen" FLOAT,
    "regularMarketDayLow" FLOAT,
    "regularMarketDayHigh" FLOAT,
    "dividendRate" FLOAT,
    "dividendYield" FLOAT,
    "exDividendDate" BIGINT,
    "payoutRatio" FLOAT,
    "fiveYearAvgDividendYield" FLOAT,
    beta FLOAT,
    "trailingPE" FLOAT,
    "forwardPE" FLOAT,
    volume BIGINT,
    "regularMarketVolume" BIGINT,
    "averageVolume" BIGINT,
    "averageVolume10days" BIGINT,
    "averageDailyVolume10Day" BIGINT,
    bid FLOAT,
    ask FLOAT,
    "bidSize" INTEGER,
    "askSize" INTEGER,
    "marketCap" BIGINT,
    "fiftyTwoWeekLow" FLOAT,
    "fiftyTwoWeekHigh" FLOAT,
    "priceToSalesTrailing12Months" FLOAT,
    "fiftyDayAverage" FLOAT,
    "twoHundredDayAverage" FLOAT,
    "trailingAnnualDividendRate" FLOAT,
    "trailingAnnualDividendYield" FLOAT,
    currency VARCHAR(10),
    tradeable BOOLEAN,
    "enterpriseValue" BIGINT,
    "profitMargins" FLOAT,
    "floatShares" BIGINT,
    "sharesOutstanding" BIGINT,
    "sharesShort" BIGINT,
    "sharesShortPriorMonth" BIGINT,
    "sharesShortPreviousMonthDate" BIGINT,
    "dateShortInterest" BIGINT,
    "sharesPercentSharesOut" FLOAT,
    "heldPercentInsiders" FLOAT,
    "heldPercentInstitutions" FLOAT,
    "shortRatio" FLOAT,
    "shortPercentOfFloat" FLOAT,
    "impliedSharesOutstanding" BIGINT,
    "bookValue" FLOAT,
    "priceToBook" FLOAT,
    "lastFiscalYearEnd" BIGINT,
    "nextFiscalYearEnd" BIGINT,
    "mostRecentQuarter" BIGINT,
    "earningsQuarterlyGrowth" FLOAT,
    "netIncomeToCommon" BIGINT,
    "trailingEps" FLOAT,
    "forwardEps" FLOAT,
    "lastSplitFactor" VARCHAR(50),
    "lastSplitDate" BIGINT,
    "enterpriseToRevenue" FLOAT,
    "enterpriseToEbitda" FLOAT,
    "52WeekChange" FLOAT,
    "SandP52WeekChange" FLOAT,
    "lastDividendValue" FLOAT,
    "lastDividendDate" BIGINT,
    "quoteType" VARCHAR(50),
    "currentPrice" FLOAT,
    "targetHighPrice" FLOAT,
    "targetLowPrice" FLOAT,
    "targetMeanPrice" FLOAT,
    "targetMedianPrice" FLOAT,
    "recommendationMean" FLOAT,
    "recommendationKey" VARCHAR(50),
    "numberOfAnalystOpinions" INTEGER,
    "totalCash" BIGINT,
    "totalCashPerShare" FLOAT,
    ebitda BIGINT,
    "totalDebt" BIGINT,
    "quickRatio" FLOAT,
    "currentRatio" FLOAT,
    "totalRevenue" BIGINT,
    "debtToEquity" FLOAT,
    "revenuePerShare" FLOAT,
    "returnOnAssets" FLOAT,
    "returnOnEquity" FLOAT,
    "grossProfits" BIGINT,
    "freeCashflow" BIGINT,
    "operatingCashflow" BIGINT,
    "earningsGrowth" FLOAT,
    "revenueGrowth" FLOAT,
    "grossMargins" FLOAT,
    "ebitdaMargins" FLOAT,
    "operatingMargins" FLOAT,
    "financialCurrency" VARCHAR(10),
    language VARCHAR(10),
    region VARCHAR(50),
    "typeDisp" VARCHAR(50),
    "quoteSourceName" VARCHAR(50),
    triggerable BOOLEAN,
    "customPriceAlertConfidence" VARCHAR(50),
    exchange VARCHAR(50),
    "messageBoardId" VARCHAR(50),
    "exchangeTimezoneName" VARCHAR(100),
    "exchangeTimezoneShortName" VARCHAR(10),
    "gmtOffSetMilliseconds" BIGINT,
    market VARCHAR(50),
    "esgPopulated" BOOLEAN,
    "regularMarketChangePercent" FLOAT,
    "regularMarketPrice" FLOAT,
    "marketState" VARCHAR(50),
    "shortName" VARCHAR(100),
    "longName" VARCHAR(100),
    "corporateActions" TEXT,
    "postMarketTime" BIGINT,
    "regularMarketTime" BIGINT,
    "hasPrePostMarketData" BOOLEAN,
    "firstTradeDateMilliseconds" BIGINT,
    "postMarketChangePercent" FLOAT,
    "postMarketPrice" FLOAT,
    "postMarketChange" FLOAT,
    "regularMarketChange" FLOAT,
    "regularMarketDayRange" VARCHAR(50),
    "fullExchangeName" VARCHAR(50),
    "averageDailyVolume3Month" BIGINT,
    "fiftyTwoWeekLowChange" FLOAT,
    "fiftyTwoWeekLowChangePercent" FLOAT,
    "fiftyTwoWeekRange" VARCHAR(50),
    "fiftyTwoWeekHighChange" FLOAT,
    "fiftyTwoWeekHighChangePercent" FLOAT,
    "fiftyTwoWeekChangePercent" FLOAT,
    "dividendDate" BIGINT,
    "earningsTimestamp" BIGINT,
    "earningsTimestampStart" BIGINT,
    "earningsTimestampEnd" BIGINT,
    "earningsCallTimestampStart" BIGINT,
    "earningsCallTimestampEnd" BIGINT,
    "isEarningsDateEstimate" BOOLEAN,
    "epsTrailingTwelveMonths" FLOAT,
    "epsForward" FLOAT,
    "epsCurrentYear" FLOAT,
    "priceEpsCurrentYear" FLOAT,
    "fiftyDayAverageChange" FLOAT,
    "fiftyDayAverageChangePercent" FLOAT,
    "twoHundredDayAverageChange" FLOAT,
    "twoHundredDayAverageChangePercent" FLOAT,
    "sourceInterval" INTEGER,
    "exchangeDataDelayedBy" INTEGER,
    "averageAnalystRating" VARCHAR(50),
    "cryptoTradeable" BOOLEAN,
    "displayName" VARCHAR(100),
    "trailingPegRatio" FLOAT,
    "ipoExpectedDate" DATE,
    "prevName" VARCHAR(100),
    "nameChangeDate" DATE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_symbol FOREIGN KEY (symbol) REFERENCES symbols(symbol) ON DELETE CASCADE
);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_yahoo_company_info_symbol ON yahoo_company_info(symbol);
CREATE INDEX IF NOT EXISTS idx_yahoo_company_info_industry ON yahoo_company_info(industry);
CREATE INDEX IF NOT EXISTS idx_yahoo_company_info_sector ON yahoo_company_info(sector);
CREATE INDEX IF NOT EXISTS idx_yahoo_company_info_market_cap ON yahoo_company_info("marketCap");
CREATE INDEX IF NOT EXISTS idx_yahoo_company_info_updated_at ON yahoo_company_info(updated_at);

-- Create trigger to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_yahoo_company_info_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_yahoo_company_info_updated_at
    BEFORE UPDATE ON yahoo_company_info
    FOR EACH ROW
    EXECUTE FUNCTION update_yahoo_company_info_updated_at();

-- Add comments
COMMENT ON TABLE yahoo_company_info IS 'Stores company information from Yahoo Finance';
COMMENT ON COLUMN yahoo_company_info.symbol IS 'Stock symbol (foreign key to symbols table)';
COMMENT ON COLUMN yahoo_company_info.industry IS 'Company industry';
COMMENT ON COLUMN yahoo_company_info.sector IS 'Company sector';
COMMENT ON COLUMN yahoo_company_info."longName" IS 'Full company name';
COMMENT ON COLUMN yahoo_company_info."industrySymbol" IS 'Industry symbol identifier';
COMMENT ON COLUMN yahoo_company_info.created_at IS 'Timestamp when record was created';
COMMENT ON COLUMN yahoo_company_info.updated_at IS 'Timestamp when record was last updated'; 